##################################################################

# Lumerical Confidential Information

# This file should be encrypted before sharing with external users!

##################################################################
backward_warning="";
warning_elements = "";
backward_error="";

### New Data Format ###

if (exist("general")){
    description=general.description;
    prefix=general.prefix;
    notes=general.notes;
    clear(general);
}

if (isstruct(ports)){
    strPorts=ports;
    port_labels=splitstring(getfield(strPorts),endl);
    plen=length(port_labels);
    pord=matrix(1,plen);

    for (p=1:length(port_labels)){
        eval("pordexists=isfield(strPorts."+port_labels{p}+",'order');");
        if (pordexists==1){
            eval("pord(1,"+num2str(p)+")=strPorts."+port_labels{p}+".order;"); 
        }else{
            pord(1,p)=0;
        }
    }
    if ( (find(pord==0)!=0)  or max(pord)>plen){
        if (sum(pord)!=0){
            backward_warning=backward_warning+"\n           Port order is not defined properly for all the defined ports. Please check the source data. Default port order will be used!";
        }
        orderexists=0;
    }else{
        orderexists=1;
    }
    
    for (po=1:length(pord)){
        if (pord(po)!=1){
            if (find(pord==pord(po)-1)==0){
                if (orderexists==1){
                    backward_warning=backward_warning+"\n           Port order is not defined properly for all the defined ports. Please check the source data. Default port order will be used!";
                    orderexists=0;            
                } 
            }
        }
    }
    
    if (orderexists==1){
        ports=cell(length(unique(pord)));
    }else{
        ports=cell(plen);
    }
    if (exist("port_labels")){
        for (p=1:length(port_labels)){
            if (orderexists==1){
                eval("ord=strPorts."+port_labels{p}+".order;");
            }else{
                ord=p;
            }
            eval("ports{"+num2str(ord)+"}=strPorts."+port_labels{p}+";");
        }
    } 
    clear(strPorts);  
}

if (isstruct(parameters)){
    new_parameters=struct;
    np=length(splitstring(getfield(parameters),endl));
    count=0;
    if (np!=0){
        for (p=1:np){
            eval("paramexists=isfield(parameters,'parameter_"+num2str(p)+"');");    
            if(paramexists!=1){
                backward_error=backward_error+"Parameters index are not consistent. Please check the source data.";
                break;
            }else{
                eval("tempParam=parameters.parameter_"+num2str(p)+";");
                if (tempParam.kind=="Temperature"){
                    enable_temperature_parameter=tempParam.visible_to_user;
                    temperature=struct;
                    temperature.default_value=tempParam.default;
                    temperature.unit=tempParam.unit;
                }else{
                    count=count+1;
                    eval("new_parameters.parameter_"+num2str(count)+"=parameters.parameter_"+num2str(p)+";");
                }
            }
        } 
        if (count!=0){
            parameters=cell(count);
            for (p=1:count){
                eval("tempParam=new_parameters.parameter_"+num2str(p)+";");
                parameters{p}=tempParam;
                parameters{p}.default_value=tempParam.default;
            }
        }
    }
    clear(new_parameters);
}

if (exist("statistical")){
    if (isfield(statistical,"parameters")){
        statPars=splitstring(getfield(statistical.parameters),endl);
        if (length(statPars)!=0){
            stat_parameters=cell(length(statPars));
            for (p=1:length(statPars)){
                eval("stat_parameters{"+num2str(p)+"}=statistical.parameters."+statPars{p}+";");
                }
        }
    }
    clear(statistical);
}

if (exist("model_data")){
    photonic_model=model_data.photonic_model;
    data_fields=splitstring(getfield(model_data.data),endl);
    for (d=1:length(data_fields)){
        eval(data_fields{d}+"=model_data.data."+data_fields{d}+";");
    }
    if (!isfield(model_data,"setup_script")){
        if (isfield(model_data,"setup_script_filename")){
        feval(source_directory + "/"+model_data.setup_script_filename);
        }
    }else{
        setup_script=model_data.setup_script;
    }
    imported_setup_script=setup_script;
    setup_script=toscript(ports);
    if (exist("stat_parameters")){
        setup_script=setup_script+toscript(stat_parameters);
    }
    for (d=1:length(data_fields)){
        eval("setup_script=setup_script+toscript("+data_fields{d}+");");
    }
    setup_script = setup_script+ imported_setup_script; 
    clear(model_data);
}

### Backward ###

# CML/notes
# Old notes
note_count=0;
for(i=1:10) {
    if(exist("note_" + num2str(i))==1){
        note_count=note_count+1;  
    }
}
if (note_count!=0){
    notes=cell(note_count);
    for (i=1:note_count){
        notes{i}=struct;
        eval('notes{'+num2str(i)+'}.property = note_' + num2str(i) + '.property;');
        eval('notes{'+num2str(i)+'}.value = note_' + num2str(i) + '.value;');
        eval('clear(note_'+ num2str(i)+');');
    }
    warning_elements = warning_elements + " notes";
}
if (warning_elements!= ""){
    backward_warning = backward_warning+ "\n           WARNING: Following data are in an old format or do not exist:\n          "+ warning_elements+endl+"           This format may not be supported in the future. Please refer to the documentation and update the data format.\n          "+endl;
}
